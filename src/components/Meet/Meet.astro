---

import { Image } from "astro:assets";

import imgLara from "../../img/Lara.png"
import imgJasmin from "../../img/Jasmin.png"
import imgSarah from "../../img/Sarah.png"

import TextBox from "./TextBox.astro"

const girls = [
    {
        name: "Lara",
        age: "19",
        town: "Aalborg",
        img: imgLara,
        quotes: [
    "“Jeg har altid haft svært ved at se mig selv i spejlet og føle mig tilfreds med det billede, der mødte mig.”",
    "“At acceptere mig selv har været en konstant kamp, hvor jeg altid følte mig som min egen værste kritiker.”",
    "“Gennem Sisterhood lærte jeg gradvist at omfavne min krop, selvom jeg tidligere kun havde set fejl.”",
    "“Sisterhood gav mig et rum, hvor jeg kunne være sårbar uden at føle mig svag.”",
    "“At være en del af Sisterhood har givet mig en masse styrke og følelsen af empowerment.”"
        ]
    },
    {
        name: "Jasmin",
        age: "16",
        town: "Odense",
        img: imgJasmin,
        quotes: [
    "“Jeg følte mig konstant utilstrækkelig og sammenlignede mig selv med andre piger.”",
    "“Jeg husker tydeligt den første gang, jeg delte mine tanker i gruppen. Jeg følte mig endelig set og hørt.”",
    "“Før Sisterhood følte jeg mig som den stille pige i baggrunden, men nu tør jeg godt åbne op.”",
    "“Jeg har lært, at det er okay at være sårbar og vise sine følelser. Det har været en befrielse.”",
    "“I Sisterhood hepper vi altid på hinanden. Det har inspireret mig til at være mere modig.”"
        ]
    },
    {
        name: "Sarah",
        age: "21",
        town: "Gistrup",
        img: imgSarah,
        quotes: [
    "“Jeg var omgivet af folk, men alligevel følte jeg mig alene. Det var som om, ingen rigtig forstod mig.”",
    "“Jeg plejede at gemme mig bag en facade, fordi jeg troede, at ingen ville forstå mig alligevel.”",
    "“Det har været en lang rejse at komme fra at føle sig isoleret til at føle sig elsket og accepteret af et fællesskab.”",
    "“Nu tror jeg på min egen værdi, og jeg er ikke længere bange for at være den, jeg er.”",
    "“Sisterhood har lært mig, at ægte styrke kommer fra at turde vise sin sårbarhed og søge støtte hos andre.”"
        ]
    }
]

---
<section>
    <div class="custom-shape-divider-top-1713812774">
        <svg data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 120" preserveAspectRatio="none">
            <path d="M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z" class="shape-fill"></path>
        </svg>
    </div>
    <div class="container">
    <h1>Mød Lara, Jasmin og Sarah</h1>
    <ul>
        {girls.map(girl=>{
            return <li>
                <Image src={girl.img} alt="" class="portrait" />
                <div class="text-box">
                    <TextBox girl={girl} />
                </div>
                </li>
        })}
    </ul>
</div>
<div class="custom-shape-divider-bottom-1713813262">
    <svg data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 120" preserveAspectRatio="none">
        <path d="M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z" class="shape-fill"></path>
    </svg>
</div>
</section>





<style>

    section {
        grid-column: span 3;
        display: grid;
        grid-template-columns: subgrid;
        position: relative;
    }

    .container {
        grid-column: 2;
        padding: 5rem 0 10rem;
        z-index: 500;
    }

    ul {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 2rem;
    }

    li {
        display: flex;
        flex-direction: column;
        gap: 2rem;
        align-items: center;
        width: minmax(300px, 100%);
        overflow: visible;
        position: relative;
        opacity: 0;
        filter: blur(5px);
        transform: translateX(-100%);
        transition: all .5s ease-in;        
    }

    li.show {
        opacity: 1;
        filter: blur(0);
        transform: translateX(0);
    }

    li.show:nth-child(2) {
        transition-delay: 200ms;
    }

    li.show:nth-child(3) {
        transition-delay: 400ms;
    }

    .portrait {
        width: 200px;
        border-radius: 100%;
        cursor: pointer;
        transition: .15s ease-in;
    }

    .portrait:hover {
        transform: scale(1.05);
        filter: opacity(75%);
    }

    .text-box {
        overflow: hidden;
        opacity: 0;
        max-height: 0;
        transform: scale(75%);
        transition: all .2s ease-out;
    }

    .text-box.active {
        max-height: 600px;        
        opacity: 1;
        transform: scale(1);
    }

    /* WAVE */

    .custom-shape-divider-top-1713812774 {
    position: absolute;
    top: -1px;
    left: 0;
    width: 100%;
    overflow: hidden;
    line-height: 0;
    z-index: -50;
}

.custom-shape-divider-top-1713812774 svg {
    position: relative;
    display: block;
    width: calc(100% + 1.3px);
    height: 70px;
}

.custom-shape-divider-top-1713812774 .shape-fill {
    fill: #F7C7D9;
}

.custom-shape-divider-bottom-1713813262 {
    position: absolute;
    bottom: -1px;
    left: 0;
    width: 100%;
    overflow: hidden;
    line-height: 0;
    transform: rotate(180deg);
}

.custom-shape-divider-bottom-1713813262 svg {
    position: relative;
    display: block;
    width: calc(100% + 1.3px);
    height: 50px;
}

.custom-shape-divider-bottom-1713813262 .shape-fill {
    fill: #F7C7D9;
}

@media (min-width: 650px) {

    li {
        gap: 3rem;
    }

    .text-box {
        width: 550px;
    }
    
    .portrait {
        width: 300px;
    }
}

@media (min-width: 1000px) {
    ul {
        flex-direction: row;
        justify-content: space-between;
        align-items: start;
        gap: 1rem;
    }

    li {
        max-width: 300px;
    }

    .container {
        padding: 10rem 0 20rem;
    }    

    .text-box {
        position: absolute;
        bottom: -416px;        
    }

    .custom-shape-divider-top-1713812774 svg {
    height: 168px;
}

    .custom-shape-divider-bottom-1713813262 svg {
    height: 250px;
}

}

</style>

<script>
const girlPortraits = document.querySelectorAll(".portrait");
const textBoxes = document.querySelectorAll(".text-box");

girlPortraits.forEach(element => {
    element.addEventListener("click", function() {
        const currentTextBox = this.parentNode.querySelector(".text-box");

        // Check if the current text box is already active
        const isActive = currentTextBox.classList.contains('active');

        // Remove 'active' class from all text boxes
        textBoxes.forEach(box => {
            box.classList.remove('active');
        });

        // Toggle 'active' based on previous state of the clicked text box
        if (!isActive) {
            currentTextBox.classList.add("active");
        }
    })
})

const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add("show")
        }
    })
})

const girls = document.querySelectorAll("li");

girls.forEach(element => {
        observer.observe(element)
    })


</script>